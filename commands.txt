./rebuild.sh;./build/default/runExperiment ./tests/graphs/advogato.edge 2 ./output_test
./rebuild.sh;./build/default/runExperiment ./tests/graphs/testGraph1.edge 1 ./output_test
./rebuild.sh;./build/default/runExperiment ./tests/graphs/testGraph7.edge 1 ./output_test
./rebuild.sh;./build/default/runExperiment ./tests/graphs/V2kD3L8exp.edge 1 ./output_test
Why use BFS instead of DFS for the longest chain
BFS simulates the search, 
we will reach the node first if there is a path the goes to that node, instead of going for a longer way to reach the node
In a sense we are simulating the process of finding the diameter


debuginfo-install --installroot=/home/k/kai1206 glibc-2.17-260.el7_6.3.x86_64 libgcc-4.8.5-36.el7_6.1.x86_64 libstdc++-4.8.5-36.el7_6.1.x86_64
debuginfo-install --downloadonly --downloaddir=/home/k/kai1206/debugFolder glibc-2.17-260.el7_6.3.x86_64 libgcc-4.8.5-36.el7_6.1.x86_64 libstdc++-4.8.5-36.el7_6.1.x86_64

file ./build/default/runExperiment
set args ./tests/graphs/testGraph1.edge 1 ./output_test

break ../Index/UnboundedLCR/NewIndex.cc:107
break default/../../Graph/DGraph.cc:1110
break default/../../Graph/DGraph.cc:717
break default/../../Graph/DGraph.cc:1018

file ./build/default/runExperiment
set args ./tests/graphs/V2kD3L8exp.edge 1 ./output_test
break default/../../Graph/DGraph.cc:1460
break ../Index/UnboundedLCR/NewIndex.cc:114


BFS within the cluster!
RRCI doesn't give much insight

python2.7 ./datagen/addLabel.py ../../data/out.cit-HepTh 3 norm
./rebuild.sh;./build/default/runExperiment ../../data/out.cit-HepTh_labeled 1 ./output_test
./build/default/genQuery ../../data/out.cit-HepTh_labeled 2 20 2 3